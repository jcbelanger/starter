user nobody nogroup;

worker_processes auto;
events {
  worker_connections 4096;
}

http {
  server_tokens off;

  include mime.types;
  default_type application/octet-stream;
  charset utf-8;
  client_max_body_size 100M;

  sendfile on;
  tcp_nopush on;

  gzip on;
  gzip_http_version 1.0;
  gzip_comp_level 6;
  gzip_min_length 256;
  gzip_buffers 16 8k;
  gzip_vary on;
  gzip_proxied any;
  gzip_types *;

  server {
    listen 80;
    listen [::]:80;

    server_name ${DOMAIN} www.${DOMAIN} static.${DOMAIN} mail.${DOMAIN} localhost [::] 127.0.0.1;

    location ^~ /.well-known/ {
      allow all;
      default_type "text/plain";
      alias /data/letsencrypt/.well-known/;
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 http2 ssl;
    listen [::]:443 http2 ssl;

    server_name ${DOMAIN} www.${DOMAIN} static.${DOMAIN} mail.${DOMAIN} localhost [::] 127.0.0.1;

    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

    proxy_redirect off;
    proxy_buffering off;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location /health-check {
      access_log off;
      return 200 'ok';
    }

    location /media/  {
      expires 1h;
      alias /media/;
    }

    location /static/ {
      expires max;
      #gzip_static on;
      alias /static/;
      try_files $uri @django-static;
    }

    location @django-static {
      proxy_pass http://django;
    }

    location / {
      proxy_pass http://django;
    }
  }
  
  upstream django {
    server django:8000 fail_timeout=0;
  }

  server {
    #catch all to prevent CSRF attacks
    listen 80 default_server;
    return 444;
  }
}
